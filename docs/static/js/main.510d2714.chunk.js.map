{"version":3,"sources":["components/Error.js","components/Question.js","components/Form.js","components/Expense.js","components/ExpensesList.js","helpers.js","components/BudgetControl.js","App.js","index.js"],"names":["Error","message","className","Question","setBudget","setRemaining","setShowQuestion","useState","amount","setAmount","error","setError","onSubmit","ev","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","shortid","require","Form","setExpense","setAddExpense","expenseName","setExpenseName","expenseAmount","setExpenseAmount","trim","expense","id","generate","Expense","ExpensesList","expenses","map","reviewBudget","budget","remaining","BudgetControl","App","showQuestion","setExpenses","charge","setCharge","addExpense","useEffect","remainingBudget","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.510d2714.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Error = ({ message }) => {\n  return <p className=\"alert alert-danger error\">{message}</p>;\n};\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Error;\n","import React, { useState } from 'react';\nimport Error from './Error';\nimport PropTypes from 'prop-types';\n\nconst Question = ({ setBudget, setRemaining, setShowQuestion }) => {\n  // define states\n  const [amount, setAmount] = useState(0);\n  const [error, setError] = useState(false);\n\n  // function that sets our budget\n  const fixBudget = (ev) => {\n    setAmount(parseInt(ev.target.value));\n  };\n\n  // submit to add the budget\n  const addBudget = (ev) => {\n    ev.preventDefault();\n\n    // validation\n    if (amount < 1 || isNaN(amount)) {\n      setError(true);\n      return;\n    }\n    // if validation is ok\n    setError(false);\n    setBudget(amount);\n    setRemaining(amount);\n    setShowQuestion(false);\n  };\n\n  return (\n    <>\n      <h2>What's your budget estimation?</h2>\n\n      {error ? <Error message=\"Your budget is incorrect\" /> : null}\n\n      <form onSubmit={addBudget}>\n        <input\n          type=\"number\"\n          className=\"u-full-width\"\n          placeholder=\"Write your estimation here\"\n          onChange={fixBudget}\n        />\n        <input\n          type=\"submit\"\n          className=\"button-primary u-full-width\"\n          value=\"Set budget\"\n        />\n      </form>\n    </>\n  );\n};\nQuestion.propTypes = {\n  setBudget: PropTypes.func.isRequired,\n  setRemaining: PropTypes.func.isRequired,\n  setShowQuestion: PropTypes.func.isRequired,\n};\nexport default Question;\n","import React, { useState } from 'react';\nimport Error from './Error';\nimport PropTypes from 'prop-types';\nconst shortid = require('shortid');\n\nconst Form = ({ setExpense, setAddExpense }) => {\n  const [expenseName, setExpenseName] = useState('');\n  const [expenseAmount, setExpenseAmount] = useState(0);\n  const [error, setError] = useState(false);\n\n  // submit to add the expense\n  const addExpense = (ev) => {\n    ev.preventDefault();\n\n    // validation, less than 0 or empty name field\n    if (\n      expenseAmount < 1 ||\n      isNaN(expenseAmount) ||\n      expenseName.trim() === ''\n      //remember, trim() removes whitespace from both sides of a string\n    ) {\n      setError(true);\n      return;\n    }\n    setError(false);\n\n    // building the expense\n    const expense = {\n      expenseName,\n      expenseAmount,\n      id: shortid.generate(), // installing library with 'npm i shortid'\n    };\n    // pass the expense to main component\n    setExpense(expense);\n    setAddExpense(true);\n\n    // reset form\n    setExpenseName('');\n    setExpenseAmount(0);\n  };\n\n  return (\n    <form onSubmit={addExpense}>\n      <h2>Write down your expenses</h2>\n\n      {error ? (\n        <Error message=\"Either you left an empty field (they are both required) or your budget is incorrect\" />\n      ) : null}\n\n      <div className=\"campo\">\n        <label>Expense description</label>\n        <input\n          type=\"text\"\n          className=\"u-full-width\"\n          placeholder=\"E.g. Transportation\"\n          value={expenseName}\n          onChange={(ev) => setExpenseName(ev.target.value)}\n        />\n      </div>\n      <div className=\"campo\">\n        <label>Expense amount</label>\n        <input\n          type=\"number\"\n          className=\"u-full-width\"\n          placeholder=\"E.g. 300\"\n          value={expenseAmount}\n          onChange={(ev) => setExpenseAmount(parseInt(ev.target.value, 10))}\n          // we put 10 as a parameter here to indicate base 10 numerals in mathematical number systems\n        />\n      </div>\n      <input\n        type=\"submit\"\n        className=\"button-primary u-full-width\"\n        value=\"Add expense\"\n      />\n    </form>\n  );\n};\nForm.propTypes = {\n  setExpense: PropTypes.func.isRequired,\n  setAddExpense: PropTypes.func.isRequired,\n};\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Expense = ({ expense }) => (\n  <li className=\"gastos\">\n    <p>\n      {expense.expenseName}\n      <span className=\"gasto\">${expense.expenseAmount}</span>\n    </p>\n  </li>\n);\nExpense.propTypes = {\n  expense: PropTypes.object.isRequired,\n};\nexport default Expense;\n","import React from 'react';\nimport Expense from './Expense';\nimport PropTypes from 'prop-types';\n\nconst ExpensesList = ({ expenses }) => (\n  <div className=\"gastos-realizados\">\n    <h2>Expenses list</h2>\n    {expenses.map((expense) => (\n      <Expense key={expense.id} expense={expense} />\n    ))}\n  </div>\n);\n\nExpensesList.propTypes = {\n  expenses: PropTypes.array.isRequired,\n};\n\nexport default ExpensesList;\n","// HELPERS\n// reusable functions not to overload components\nexport const reviewBudget = (budget, remaining) => {\n  let classStyle;\n\n  if (budget / 4 > remaining) {\n    classStyle = 'alert alert-danger';\n  } else if (budget / 2 > remaining) {\n    classStyle = 'alert alert-warning';\n  } else {\n    classStyle = 'alert alert-success';\n  }\n  return classStyle;\n};\n","import React from 'react';\n//we put keys here because it is not a default import\nimport { reviewBudget } from '../helpers';\nimport PropTypes from 'prop-types';\n\nconst BudgetControl = ({ budget, remaining }) => {\n  return (\n    <>\n      <div className=\"alert alert-primary\">Budget: {budget}€</div>\n      <div className={reviewBudget(budget, remaining)}>\n        Remaining: {remaining}€\n      </div>\n    </>\n  );\n};\n\nBudgetControl.propTypes = {\n  budget: PropTypes.number.isRequired,\n  remaining: PropTypes.number.isRequired,\n};\nexport default BudgetControl;\n","import React, { useState, useEffect } from 'react';\nimport Question from './components/Question';\nimport Form from './components/Form';\nimport ExpensesList from './components/ExpensesList';\nimport BudgetControl from './components/BudgetControl';\n\nfunction App() {\n  // define money states\n  const [budget, setBudget] = useState(0);\n  const [remaining, setRemaining] = useState(0);\n  const [showQuestion, setShowQuestion] = useState(true);\n  const [expenses, setExpenses] = useState([]);\n  const [charge, setCharge] = useState({});\n  const [addExpense, setAddExpense] = useState(false);\n\n  // useEffect for updating remaining\n  useEffect(() => {\n    if (addExpense) {\n      // adds expense\n      setExpenses([...expenses, charge]);\n\n      // subtracts from budget\n      const remainingBudget = remaining - charge.expenseAmount;\n      setRemaining(remainingBudget);\n\n      // reset to false\n      setAddExpense(false);\n    }\n  }, [addExpense, charge, expenses, remaining]); //dependencies\n\n  // when adding new expense\n  // const addNewExpense = (expense) => {\n  //   setExpenses([...expenses, expense]);\n  // };\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Budget monitoring app</h1>\n        <div className=\"contenido-principal contenido\">\n          {/* conditional component loading here:\n           only if we set a budget our component appears\n          */}\n          {showQuestion ? (\n            <Question\n              setBudget={setBudget}\n              setRemaining={setRemaining}\n              setShowQuestion={setShowQuestion}\n            />\n          ) : (\n            <div className=\"row\">\n              <div className=\"one-half column\">\n                <Form setExpense={setCharge} setAddExpense={setAddExpense} />\n              </div>\n              <div className=\"one-half column\">\n                <ExpensesList expenses={expenses} />\n                <BudgetControl budget={budget} remaining={remaining} />\n              </div>\n            </div>\n          )}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}